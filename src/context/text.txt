import { createContext, useContext } from "react";
import { initializeApp } from "firebase/app";
import {
  getAuth,
  signInWithEmailAndPassword,
  createUserWithEmailAndPassword,
} from "firebase/auth";
import { getFirestore, collection, addDoc } from "firebase/firestore";

// created context
const FirebaseContext = createContext(null);

 // firbase config
const firebaseConfig = {
  apiKey: "AIzaSyCz3DfNV35XEv-0G-WQo5VSRledVt5x8lA",
  authDomain: "ebook-38a74.firebaseapp.com",
  projectId: "ebook-38a74",
  storageBucket: "ebook-38a74.appspot.com",
  messagingSenderId: "355740807458",
  appId: "1:355740807458:web:47b89c877ad6277e60f57b",
  databaseURL: "https://ebook-38a74-default-rtdb.firebaseio.com",
};

const firebaseApp = initializeApp(firebaseConfig);
// firbase auth
const firebaseAuth = getAuth(firebaseApp);


// firestore
const firestore = getFirestore(firebaseApp);

const signIn = (email, password) => {
  signInWithEmailAndPassword(firebaseAuth, email, password).then((value) => {
    console.log("success");
  });
};

const signUp = (email, password) => {
  createUserWithEmailAndPassword(firebaseAuth, email, password).then(
    (value) => {
      console.log("done creating");
    }
  );
};

const writeData = async () => {
  const result = await addDoc(collection(firestore, "cities"), {
    name: "Delhi",
    pinCode: 110076,
    lat: 343,
    long: 532,
  });

  console.log(result);
};

const FirebaseProvider = ({ children }) => {
  return (
    <FirebaseContext.Provider value={{ signIn, signUp, writeData }}>
      {children}
    </FirebaseContext.Provider>
  );
};

//custom hook
const useFirebase = () => {
  return useContext(FirebaseContext);
};

export {
  firebaseAuth,
  FirebaseProvider,
  useFirebase,
  FirebaseContext,
  firebaseApp,
};
 